/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */ 
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "./toggle";
var styles_NgxToggle = [":host {position: relative; display: inline-block;}", ".ngx-toggle-container, .ngx-toggle-on, .ngx-toggle-off, .ngx-toggle-handle {\n            display: -webkit-box !important;\n            display: -webkit-flex !important;\n            display: -ms-flexbox !important;\n            display: flex !important;\n        }", ".ngx-toggle-wrapper {\n            position:       relative;\n            display:        block;\n            direction:      ltr;\n            cursor:         pointer;\n            overflow:       hidden;\n            padding:        0;\n            text-align:     left;\n            z-index:        0;\n            user-select:    none;\n            vertical-align: middle;\n            transition:     border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n            box-sizing:     content-box;\n        }", ".ngx-toggle-wrapper.disabled,.ngx-toggle-wrapper.disabled .btn{cursor: default;}", ".ngx-toggle-wrapper input{position: absolute; z-index: -1; visibility: hidden; width: 1px; height: 1px;}", ".ngx-toggle-container{align-items: stretch!important; top: 0; border-radius: 0; transform: translateZ(0);}", ".ngx-toggle-wrapper.ngx-toggle-animate .ngx-toggle-container {transition: margin-left 0.5s;}", ".ngx-toggle-on,.ngx-toggle-off {align-items: center!important; text-align: center; z-index: 1; border-radius: 0;}", ".ngx-toggle-on, .ngx-toggle-off, .ngx-toggle-handle {\n            box-sizing:  border-box;\n            cursor:      pointer;\n            user-select: none;\n        }", ".ngx-toggle-handle {\n            text-align:    center;\n            margin-top:    -1px;\n            margin-bottom: -1px;\n            z-index:       100;\n            width:         1em;\n            padding-left:  0;\n            padding-right: 0;\n            align-self:    stretch !important;\n        }"];
var RenderType_NgxToggle = i0.ɵcrt({ encapsulation: 2, styles: styles_NgxToggle, data: {} });
export { RenderType_NgxToggle as RenderType_NgxToggle };
function View_NgxToggle_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵand(0, null, null, 0))], null, null); }
function View_NgxToggle_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, null, null, null, null, null, null, null)), (_l()(), i0.ɵted(1, null, ["", ""]))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.onText; _ck(_v, 1, 0, currVal_0); }); }
function View_NgxToggle_3(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵand(0, null, null, 0))], null, null); }
function View_NgxToggle_4(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, null, null, null, null, null, null, null)), (_l()(), i0.ɵted(1, null, ["", ""]))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.offText; _ck(_v, 1, 0, currVal_0); }); }
export function View_NgxToggle_0(_l) { return i0.ɵvid(0, [i0.ɵqud(402653184, 1, { wrapperElement: 0 }), i0.ɵqud(402653184, 2, { containerElement: 0 }), i0.ɵqud(402653184, 3, { onElement: 0 }), i0.ɵqud(402653184, 4, { offElement: 0 }), i0.ɵqud(402653184, 5, { handleElement: 0 }), (_l()(), i0.ɵeld(5, 0, [[1, 0], ["wrapper", 1]], null, 18, "div", [["class", "ngx-toggle-wrapper btn"]], null, null, null, null, null)), i0.ɵdid(6, 278528, null, 0, i1.NgClass, [i0.IterableDiffers, i0.KeyValueDiffers, i0.ElementRef, i0.Renderer2], { klass: [0, "klass"], ngClass: [1, "ngClass"] }, null), (_l()(), i0.ɵeld(7, 0, [[2, 0], ["container", 1]], null, 15, "div", [["class", "ngx-toggle-container"]], [[4, "margin-left", null]], null, null, null, null)), (_l()(), i0.ɵeld(8, 0, [[3, 0], ["on", 1]], null, 5, "span", [["class", "ngx-toggle-on btn"]], null, null, null, null, null)), i0.ɵdid(9, 278528, null, 0, i1.NgClass, [i0.IterableDiffers, i0.KeyValueDiffers, i0.ElementRef, i0.Renderer2], { klass: [0, "klass"], ngClass: [1, "ngClass"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_NgxToggle_1)), i0.ɵdid(11, 540672, null, 0, i1.NgTemplateOutlet, [i0.ViewContainerRef], { ngTemplateOutlet: [0, "ngTemplateOutlet"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_NgxToggle_2)), i0.ɵdid(13, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, "ngIf"] }, null), (_l()(), i0.ɵeld(14, 0, [[5, 0], ["handle", 1]], null, 2, "span", [["class", "ngx-toggle-handle btn"]], null, null, null, null, null)), i0.ɵdid(15, 278528, null, 0, i1.NgClass, [i0.IterableDiffers, i0.KeyValueDiffers, i0.ElementRef, i0.Renderer2], { klass: [0, "klass"], ngClass: [1, "ngClass"] }, null), (_l()(), i0.ɵted(-1, null, ["\u00A0"])), (_l()(), i0.ɵeld(17, 0, [[4, 0], ["off", 1]], null, 5, "span", [["class", "ngx-toggle-off btn"]], null, null, null, null, null)), i0.ɵdid(18, 278528, null, 0, i1.NgClass, [i0.IterableDiffers, i0.KeyValueDiffers, i0.ElementRef, i0.Renderer2], { klass: [0, "klass"], ngClass: [1, "ngClass"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_NgxToggle_3)), i0.ɵdid(20, 540672, null, 0, i1.NgTemplateOutlet, [i0.ViewContainerRef], { ngTemplateOutlet: [0, "ngTemplateOutlet"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_NgxToggle_4)), i0.ɵdid(22, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, "ngIf"] }, null), i0.ɵncd(null, 0)], function (_ck, _v) { var _co = _v.component; var currVal_0 = "ngx-toggle-wrapper btn"; var currVal_1 = _co.btnClasses; _ck(_v, 6, 0, currVal_0, currVal_1); var currVal_3 = "ngx-toggle-on btn"; var currVal_4 = _co.onClasses; _ck(_v, 9, 0, currVal_3, currVal_4); var currVal_5 = ((_co.onLabel == null) ? null : _co.onLabel.templateRef); _ck(_v, 11, 0, currVal_5); var currVal_6 = !_co.onLabel; _ck(_v, 13, 0, currVal_6); var currVal_7 = "ngx-toggle-handle btn"; var currVal_8 = _co.handleClass; _ck(_v, 15, 0, currVal_7, currVal_8); var currVal_9 = "ngx-toggle-off btn"; var currVal_10 = _co.offClasses; _ck(_v, 18, 0, currVal_9, currVal_10); var currVal_11 = ((_co.offLabel == null) ? null : _co.offLabel.templateRef); _ck(_v, 20, 0, currVal_11); var currVal_12 = !_co.offLabel; _ck(_v, 22, 0, currVal_12); }, function (_ck, _v) { var _co = _v.component; var currVal_2 = _co.marginLeft; _ck(_v, 7, 0, currVal_2); }); }
export function View_NgxToggle_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, "ngx-toggle", [], null, [[null, "click"], [null, "touchstart"], [null, "mousedown"], [null, "touchmove"], [null, "mousemove"], [null, "touchend"], [null, "mouseup"], [null, "mouseleave"], [null, "keydown"]], function (_v, en, $event) { var ad = true; if (("click" === en)) {
        var pd_0 = (i0.ɵnov(_v, 1).handleClick() !== false);
        ad = (pd_0 && ad);
    } if (("touchstart" === en)) {
        var pd_1 = (i0.ɵnov(_v, 1).onTouchStart($event) !== false);
        ad = (pd_1 && ad);
    } if (("mousedown" === en)) {
        var pd_2 = (i0.ɵnov(_v, 1).onMouseDown($event) !== false);
        ad = (pd_2 && ad);
    } if (("touchmove" === en)) {
        var pd_3 = (i0.ɵnov(_v, 1).onTouchMove($event) !== false);
        ad = (pd_3 && ad);
    } if (("mousemove" === en)) {
        var pd_4 = (i0.ɵnov(_v, 1).onMouseMove($event) !== false);
        ad = (pd_4 && ad);
    } if (("touchend" === en)) {
        var pd_5 = (i0.ɵnov(_v, 1).onTouchEnd($event) !== false);
        ad = (pd_5 && ad);
    } if (("mouseup" === en)) {
        var pd_6 = (i0.ɵnov(_v, 1).onMouseUp($event) !== false);
        ad = (pd_6 && ad);
    } if (("mouseleave" === en)) {
        var pd_7 = (i0.ɵnov(_v, 1).onMouseLeave($event) !== false);
        ad = (pd_7 && ad);
    } if (("keydown" === en)) {
        var pd_8 = (i0.ɵnov(_v, 1).onKeyDown($event) !== false);
        ad = (pd_8 && ad);
    } return ad; }, View_NgxToggle_0, RenderType_NgxToggle)), i0.ɵdid(1, 14204928, null, 1, i2.NgxToggle, [i0.NgZone, i0.ElementRef], null, null), i0.ɵqud(603979776, 1, { labelElements: 1 })], null, null); }
var NgxToggleNgFactory = i0.ɵccf("ngx-toggle", i2.NgxToggle, View_NgxToggle_Host_0, { onText: "onText", offText: "offText", onColor: "onColor", offColor: "offColor", size: "size", disabled: "disabled", value: "value" }, { valueChange: "valueChange" }, ["*"]);
export { NgxToggleNgFactory as NgxToggleNgFactory };
//# sourceMappingURL=toggle.ngfactory.js.map